---
name: CI (main)

on:
  push:
    branches:
      - main
      - 'bugfix/**'
      - 'feature/**'
  pull_request:
    branches:
      - 'bump/patch-**'

env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

jobs:
  unit_tests:
    name: Unit tests
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Install node
        uses: actions/setup-node@v2.1.1
        with:
          node-version: '14'
      - name: Compile
        run: yarn install
      - name: Lint
        run: yarn run lint
      - name: Security tests
        run: |
          yarn run security:auth ${{ secrets.SNYK_API_TOKEN }}
          yarn run security:test
      - name: Unit tests
        run: yarn run test
        if: github.ref != 'refs/heads/main'
      - name: Unit tests with coverage
        uses: paambaati/codeclimate-action@v2.7.5
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageCommand: yarn run test
          debug: true
  functional_tests:
    name: Functional tests
    timeout-minutes: 5
    strategy:
      matrix:
        os: ['ubuntu-latest', 'windows-latest']
        version: ['0.1.1', '0.1.2', '0.2', '0.2.1', '0.2.2', '0.2.3', '0.3', '0.3.1', '0.3.2', '0.3.3']
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          ref: ${{ github.ref }}
      - name: Install node
        uses: actions/setup-node@v2.1.1
        with:
          node-version: '14'
      - name: Compile
        run: yarn install
      - name: Build
        run: yarn run build
      - name: Install Umka
        uses: ./
        with:
          version: ${{ matrix.version }}
      - name: Run script (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: umka ./hello-world.um
      - name: Run script (Windows)
        if: matrix.os == 'windows-latest'
        run: umka.exe ./hello-world.um
